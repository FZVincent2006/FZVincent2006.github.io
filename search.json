[{"title":"Propmt Engineering普及——学源结构制作范例","url":"/2025/09/26/Propmt-Engineering%E6%99%AE%E5%8F%8A%E2%80%94%E2%80%94%E5%AD%A6%E6%BA%90%E7%BB%93%E6%9E%84%E5%88%B6%E4%BD%9C%E8%8C%83%E4%BE%8B/","content":"同学们大家好！我是来自通信2404的方正，受张老师的邀请给大家简单讲解一下大模型（LLM）的使用技巧。\n“驯服”AI第一课：到底什么是Prompt Engineering？你是不是也觉得AI（人工智能）又酷又神秘？特别是那些被称为“大模型”的AI巨兽，比如GPT、Gemini，它们好像什么都懂。但你有没发现，有时候你问它问题，它会给你一堆“废话”，有时候却能给出惊为天人的答案？\n这中间的差别，就藏在一门神奇的“手艺”里——Prompt Engineering（提示词工程）。\n别被“工程”这个词吓到，说白了，它就是研究如何跟AI高效“说话”的艺术。\n想象一下，AI是一个超级聪明、知识渊博但有点“一根筋”的机器人。\n如果你问得含糊：“聊聊车呗。”它可能会从汽车诞生讲到未来飞行汽车，滔滔不绝，但没一句是你想要的。\n如果你问得精准：“假设你是个金牌销售，请用三句话，向一个带娃的、注重安全和油耗的妈妈推荐一款SUV。”它会立刻“上身”，精准输出：“姐，这款车有七个安全气囊和主动刹车，安全绝对放心！而且它是混动的，市区堵车也不心疼油钱，特别适合家用。”\n现在最新的研究表明，给LLM设定mbti，也会得到不同的效果，感兴趣的同学可以搜索相关文献或者自己尝试一下！这就是Prompt Engineering的魔力。它不是编程，而是一种沟通技巧，通过精心设计你的问题（也就是Prompt），来引导AI输出最棒的答案。这门手艺，就是我们普通人驾驭AI巨兽的“缰绳”。\n老师的挑战：绘制AI学术圈的“星图”聪明的同学看完上面的例子肯定已经想到应该如何解决这个问题了，下面我带大家进行一个简单的规范化操作演示。\n第一步：明确目标，我们要画什么？所谓的“学源结构”，其实就是一张关系图。图上的每一个“点”是一位学者，连接他们的“线”就是师生关系。比如，深度学习的三巨头 Geoffrey Hinton, Yann LeC-un, 和 Yoshua Bengio，他们和他们的老师之间，是怎样一张看不见的网络？\n这张图能告诉我们学术思想是如何传承和演化的。\n第二步：准备“食材”，我们要喂给AI什么？AI不是神，它需要精准的“食材”（数据）才能干活。我们不能直接问“AI大佬的家谱是啥？”\n我们需要先手动进行一轮简单的信息收集，作为“引子”。我们就从“深度学习教父” Geoffrey Hinton 开始。我们需要知道：\n他的博士导师是谁？ (Christopher Longuet-Higgins)\n他有哪些著名的学生？ (这个可以让AI帮我们补充)\n第三步：与AI对话，精心设计我们的Prompt这是最关键的一步！我们的目标是让AI输出结构化的信息（比如一段代码或表格），而不是一大段文字。这样我们才能轻松地把它变成一张图。\n下面就是我设计的核心提示词（Prompt），你可以直接复制使用：\n提示词 v1.0 (入门版):\n假设你是一名计算机科学领域的学术研究助理。我将给你一位学者的核心信息，请你以严格的JSON格式，帮我梳理并补全他的学术传承信息。\n输入学者:姓名: Geoffrey Hinton已知博士导师: Christopher Longuet-Higgins\n请严格按照以下JSON结构输出，并帮我补全notable_students字段，列出至少三位他最著名的学生:\n{  “name”: “Geoffrey Hinton”,  “phd_advisor”: “Christopher Longuet-Higgins”,  “notable_students”: [    &#x2F;&#x2F; 这里请帮我填充  ]}\n这个Prompt为什么有效？设定角色：“假设你是一名……研究助理”，这能让AI的回答更专业。\n**提供范例 (Few-shot)：**我们给了它一个完美的“答案模板”（JSON结构），这极大地规范了它的输出，避免它自由发挥。\n**指令清晰：**我们明确告诉它需要“补全notable_students字段”，任务非常具体。\n把这个Prompt喂给大模型，它会很听话地返回下面这样干净的JSON代码：\n&#123;  &quot;name&quot;: &quot;Geoffrey Hinton&quot;,  &quot;phd_advisor&quot;: &quot;Christopher Longuet-Higgins&quot;,  &quot;notable_students&quot;: [    &quot;Yann LeCun&quot;,    &quot;Ilya Sutskever&quot;,    &quot;Ruslan Salakhutdinov&quot;  ]&#125;\n\n###第四步：从数据到星图，让关系一目了然有了结构化的数据，把它变成图就太简单了！我们可以使用一种叫 Mermaid 的图表语言。\n我们把刚刚得到的JSON关系，手动转换成下面几行Mermaid代码：\ngraph TD;    Christopher_Longuet_Higgins --&gt; Geoffrey_Hinton;    Geoffrey_Hinton --&gt; Yann_LeCun;    Geoffrey_Hinton --&gt; Ilya_Sutskever;    Geoffrey_Hinton --&gt; Ruslan_Salakhutdinov;\n把这段代码粘贴到任何支持Mermaid的Markdown编辑器里（比如Mermaid 官方的在线编辑器Mermaid Live Editor），一张清晰的学术传承图就诞生了！\n当然，你也可以选择将转换mermaid这一步骤融合进propmt中，一步到位，我用的是Gimini，发现并不能直接渲染出表格，测试后发现豆包是可以直接生成图表的，大家可以尝试一下。\n总结我们刚刚完成了一件很酷的事，这个样例的核心不仅仅是学会更好的使用AI，更是要明白如何与AI协作：我们负责提出好的问题、提供引子和框架，AI负责用它渊博的知识来填充细节。\n希望这篇文章能够帮到大家，也希望大家可以去查阅Prompt Engineering的前沿探索，让AI帮助自己成为超级个体！\n","tags":["LLM"]}]